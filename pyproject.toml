[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cyclone-web"
dynamic = ["version"]
description = "一个现代化的异步Web后端框架，基于协程和异步I/O"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Cyclone Team", email = "J0716gzs@163.com"}
]
maintainers = [
    {name = "0716gzs", email = "J0716gzs@163.com"}
]
keywords = ["async", "web", "framework", "http", "mysql", "asyncio", "coroutine"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: AsyncIO",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "aiomysql>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
yaml = ["PyYAML>=6.0"]
redis = ["aioredis>=2.0.0"]
all = ["PyYAML>=6.0", "aioredis>=2.0.0"]

[project.urls]
Homepage = "https://github.com/0716gzs/Cyclone"
Documentation = "https://github.com/0716gzs/Cyclone#readme"
Repository = "https://github.com/0716gzs/Cyclone.git"
"Bug Tracker" = "https://github.com/0716gzs/Cyclone/issues"
Changelog = "https://github.com/0716gzs/Cyclone/blob/main/CHANGELOG.md"

[project.scripts]
cyclone = "cyclone.cli:main"

[tool.setuptools]
packages = ["cyclone", "cyclone.database"]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "cyclone.__version__"}

[tool.setuptools.package-data]
cyclone = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["cyclone"]
omit = [
    "tests/*",
    "setup.py",
    "examples/*",
    "config_examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
